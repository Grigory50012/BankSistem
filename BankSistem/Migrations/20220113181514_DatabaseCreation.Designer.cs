// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankSistem.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220113181514_DatabaseCreation")]
    partial class DatabaseCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdAccount");

                    b.Property<decimal>("Balance")
                        .HasColumnType("Money");

                    b.Property<Guid>("IdCardOwner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdCardOwner");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed45ad28-c73e-4b0f-9db7-7f2d0040f438"),
                            Balance = 10m,
                            IdCardOwner = new Guid("0ef8ac41-db5c-47b6-a536-0706d7204f99")
                        },
                        new
                        {
                            Id = new Guid("f30b0daa-810f-4d14-9072-158973ccf3ca"),
                            Balance = 20m,
                            IdCardOwner = new Guid("58476e7a-1213-4c17-afb5-049cf6265d6a")
                        },
                        new
                        {
                            Id = new Guid("b7736cae-2a7a-42e7-900c-163d0a6b1db6"),
                            Balance = 30m,
                            IdCardOwner = new Guid("69799b8b-3a07-4ad0-bd56-3131ccde4d81")
                        },
                        new
                        {
                            Id = new Guid("93ad8e5c-cd32-4cd9-8944-224e76d6d24d"),
                            Balance = 40m,
                            IdCardOwner = new Guid("81dffe2c-4577-4432-9743-e4cc8920bdf7")
                        },
                        new
                        {
                            Id = new Guid("e4150c2e-c74a-400b-9fee-48b09ef3e805"),
                            Balance = 50m,
                            IdCardOwner = new Guid("a1e9235c-61a4-4a60-a6d0-117f924a2605")
                        },
                        new
                        {
                            Id = new Guid("ec38f0a8-be2b-4f91-9af0-47ab5d1769c3"),
                            Balance = 60m,
                            IdCardOwner = new Guid("0ef8ac41-db5c-47b6-a536-0706d7204f99")
                        },
                        new
                        {
                            Id = new Guid("8c961fbe-9316-41b0-913c-6fed6977d479"),
                            Balance = 70m,
                            IdCardOwner = new Guid("58476e7a-1213-4c17-afb5-049cf6265d6a")
                        });
                });

            modelBuilder.Entity("Entities.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdCard");

                    b.Property<decimal>("Balance")
                        .HasColumnType("Money");

                    b.Property<Guid>("IdAccount")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdAccount");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4e3cd8b-2a59-4dbc-af8e-82196dac63f9"),
                            Balance = 100m,
                            IdAccount = new Guid("ed45ad28-c73e-4b0f-9db7-7f2d0040f438")
                        },
                        new
                        {
                            Id = new Guid("d3787455-4540-4c89-8cee-29aa0e14f73b"),
                            Balance = 90m,
                            IdAccount = new Guid("f30b0daa-810f-4d14-9072-158973ccf3ca")
                        },
                        new
                        {
                            Id = new Guid("ce95c5b3-a854-449b-b6bc-3d3f6d74d4e7"),
                            Balance = 80m,
                            IdAccount = new Guid("b7736cae-2a7a-42e7-900c-163d0a6b1db6")
                        },
                        new
                        {
                            Id = new Guid("90ff565b-0ec2-434b-8779-d4f3d54f7478"),
                            Balance = 70m,
                            IdAccount = new Guid("93ad8e5c-cd32-4cd9-8944-224e76d6d24d")
                        },
                        new
                        {
                            Id = new Guid("66c03d49-f33b-4aa8-bcf5-81b1144828de"),
                            Balance = 60m,
                            IdAccount = new Guid("e4150c2e-c74a-400b-9fee-48b09ef3e805")
                        },
                        new
                        {
                            Id = new Guid("fe4eca51-fad4-4ead-9bda-2a9fbd81a87a"),
                            Balance = 50m,
                            IdAccount = new Guid("ec38f0a8-be2b-4f91-9af0-47ab5d1769c3")
                        },
                        new
                        {
                            Id = new Guid("18dc9f21-2bd6-4a6c-bb6a-67f9b200f8d6"),
                            Balance = 40m,
                            IdAccount = new Guid("8c961fbe-9316-41b0-913c-6fed6977d479")
                        },
                        new
                        {
                            Id = new Guid("cd6f000d-5285-4401-b010-283fe976d589"),
                            Balance = 30m,
                            IdAccount = new Guid("ed45ad28-c73e-4b0f-9db7-7f2d0040f438")
                        },
                        new
                        {
                            Id = new Guid("50fa7c36-1025-407c-af2e-7c060fd69ffd"),
                            Balance = 20m,
                            IdAccount = new Guid("f30b0daa-810f-4d14-9072-158973ccf3ca")
                        },
                        new
                        {
                            Id = new Guid("ba52bcfa-e7ba-4dff-9ef1-04118350d1fc"),
                            Balance = 10m,
                            IdAccount = new Guid("b7736cae-2a7a-42e7-900c-163d0a6b1db6")
                        });
                });

            modelBuilder.Entity("Entities.Models.CardOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdCardOwner");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("CardOwners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ef8ac41-db5c-47b6-a536-0706d7204f99"),
                            Name = "Дима"
                        },
                        new
                        {
                            Id = new Guid("58476e7a-1213-4c17-afb5-049cf6265d6a"),
                            Name = "Влад"
                        },
                        new
                        {
                            Id = new Guid("69799b8b-3a07-4ad0-bd56-3131ccde4d81"),
                            Name = "Гриша"
                        },
                        new
                        {
                            Id = new Guid("81dffe2c-4577-4432-9743-e4cc8920bdf7"),
                            Name = "Саша"
                        },
                        new
                        {
                            Id = new Guid("a1e9235c-61a4-4a60-a6d0-117f924a2605"),
                            Name = "Кирилл"
                        });
                });

            modelBuilder.Entity("Entities.Models.OwnerStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdOwnerStatus");

                    b.Property<Guid>("IdCardOwner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSocialStatus")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdCardOwner");

                    b.HasIndex("IdSocialStatus");

                    b.ToTable("OwnerStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("353ad58d-6c1f-468d-9c30-65cf14329afd"),
                            IdCardOwner = new Guid("0ef8ac41-db5c-47b6-a536-0706d7204f99"),
                            IdSocialStatus = new Guid("c163c49a-c3df-40e0-8bbc-e635aee61431")
                        },
                        new
                        {
                            Id = new Guid("628f2928-2104-4fd5-a073-9f2316a6ae43"),
                            IdCardOwner = new Guid("58476e7a-1213-4c17-afb5-049cf6265d6a"),
                            IdSocialStatus = new Guid("66acb6d3-256a-4cf7-9e76-04d84ceea1f4")
                        },
                        new
                        {
                            Id = new Guid("3675bbfd-1d00-497e-88d5-190a3b104343"),
                            IdCardOwner = new Guid("69799b8b-3a07-4ad0-bd56-3131ccde4d81"),
                            IdSocialStatus = new Guid("04fadf24-1488-4197-9ae6-a8737ffe8337")
                        },
                        new
                        {
                            Id = new Guid("23879e10-0a0b-44a1-803d-8b60f9d1b301"),
                            IdCardOwner = new Guid("81dffe2c-4577-4432-9743-e4cc8920bdf7"),
                            IdSocialStatus = new Guid("c163c49a-c3df-40e0-8bbc-e635aee61431")
                        },
                        new
                        {
                            Id = new Guid("05da5e43-2252-420a-977f-1ea9cdbf4232"),
                            IdCardOwner = new Guid("a1e9235c-61a4-4a60-a6d0-117f924a2605"),
                            IdSocialStatus = new Guid("66acb6d3-256a-4cf7-9e76-04d84ceea1f4")
                        });
                });

            modelBuilder.Entity("Entities.Models.SocialStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdSocialStatus");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SocialStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c163c49a-c3df-40e0-8bbc-e635aee61431"),
                            Name = "Пенсионер"
                        },
                        new
                        {
                            Id = new Guid("66acb6d3-256a-4cf7-9e76-04d84ceea1f4"),
                            Name = "Инвалид"
                        },
                        new
                        {
                            Id = new Guid("04fadf24-1488-4197-9ae6-a8737ffe8337"),
                            Name = "Ветеран"
                        });
                });

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.HasOne("Entities.Models.CardOwner", "CardOwner")
                        .WithMany("Accounts")
                        .HasForeignKey("IdCardOwner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardOwner");
                });

            modelBuilder.Entity("Entities.Models.Card", b =>
                {
                    b.HasOne("Entities.Models.Account", "Account")
                        .WithMany("Cards")
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Entities.Models.OwnerStatus", b =>
                {
                    b.HasOne("Entities.Models.CardOwner", "CardOwner")
                        .WithMany("OwnerStatuses")
                        .HasForeignKey("IdCardOwner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.SocialStatus", "SocialStatus")
                        .WithMany("OwnerStatuses")
                        .HasForeignKey("IdSocialStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardOwner");

                    b.Navigation("SocialStatus");
                });

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Entities.Models.CardOwner", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("OwnerStatuses");
                });

            modelBuilder.Entity("Entities.Models.SocialStatus", b =>
                {
                    b.Navigation("OwnerStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
